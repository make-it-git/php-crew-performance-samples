version: '3.8'

services:
  php:
    container_name: php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/my-php.ini
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    depends_on:
      - postgres
      - redis
    environment:
      - APP_ENV=dev
      - APP_DEBUG=0
      - DATABASE_URL=postgresql://symfony:symfony@postgres:5432/symfony?serverVersion=15&charset=utf8
      - REDIS_URL=redis://redis:6379
    command: php-fpm
    healthcheck:
      test: ["CMD", "php-fpm -t"] # Or a more specific check
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  php-fpm-exporter:
    container_name: php-fpm-exporter
    image: hipages/php-fpm_exporter:latest
    ports:
      - "9253:9253"
    command:
      - '--phpfpm.scrape-uri=tcp://php:9000/status'
      - '--phpfpm.fix-process-count'
    depends_on:
      - php

  php-cli:
    container_name: php-cli
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/my-php.ini
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/custom.conf
    depends_on:
      - postgres
      - redis
    environment:
      - APP_ENV=dev
      - DATABASE_URL=postgresql://symfony:symfony@postgres:5432/symfony?serverVersion=15&charset=utf8
      - REDIS_URL=redis://redis:6379
    stdin_open: true
    tty: true
    command: tail -f /dev/null

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=symfony
      - POSTGRES_USER=symfony
      - POSTGRES_PASSWORD=symfony
    ports:
      - "5432:5432"

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - php-fpm-exporter

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    volumes: 
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - prometheus

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
